// Code generated by MockGen. DO NOT EDIT.
// Source: ./requester.go

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockclientAPI is a mock of clientAPI interface.
type MockclientAPI struct {
	ctrl     *gomock.Controller
	recorder *MockclientAPIMockRecorder
}

// MockclientAPIMockRecorder is the mock recorder for MockclientAPI.
type MockclientAPIMockRecorder struct {
	mock *MockclientAPI
}

// NewMockclientAPI creates a new mock instance.
func NewMockclientAPI(ctrl *gomock.Controller) *MockclientAPI {
	mock := &MockclientAPI{ctrl: ctrl}
	mock.recorder = &MockclientAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockclientAPI) EXPECT() *MockclientAPIMockRecorder {
	return m.recorder
}

// Do mocks base method.
func (m *MockclientAPI) Do(req *http.Request) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do", req)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Do indicates an expected call of Do.
func (mr *MockclientAPIMockRecorder) Do(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockclientAPI)(nil).Do), req)
}
